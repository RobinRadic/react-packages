"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const Base = require("yeoman-generator");
const Ask_1 = require("./Ask");
const child_process_1 = require("child_process");
class Generator extends Base {
    constructor() {
        super(...arguments);
        this._ask = new Ask_1.Ask(this);
    }
    get ask() { return this._ask; }
    exec(cmd, options) {
        return child_process_1.execSync(cmd, Object.assign({ cwd: this.destinationPath(), encoding: 'utf8' }, options));
    }
}
exports.Generator = Generator;
exports.default = Generator;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiR2VuZXJhdG9yLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc3JjL2xpYi9HZW5lcmF0b3IudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSx5Q0FBeUM7QUFDekMsK0JBQTRCO0FBQzVCLGlEQUE0RTtBQWE1RSxNQUFzQixTQUFVLFNBQVEsSUFBSTtJQUE1Qzs7UUFDWSxTQUFJLEdBQUcsSUFBSSxTQUFHLENBQUMsSUFBSSxDQUFDLENBQUE7SUFVaEMsQ0FBQztJQVRHLElBQVcsR0FBRyxLQUFTLE9BQU8sSUFBSSxDQUFDLElBQUksQ0FBQSxDQUFBLENBQUM7SUFFOUIsSUFBSSxDQUFDLEdBQVUsRUFBRSxPQUEwQztRQUNqRSxPQUFPLHdCQUFRLENBQUMsR0FBRyxrQkFDZixHQUFHLEVBQUUsSUFBSSxDQUFDLGVBQWUsRUFBRSxFQUMzQixRQUFRLEVBQUUsTUFBTSxJQUNiLE9BQU8sRUFDWixDQUFBO0lBQ04sQ0FBQztDQUNKO0FBWEQsOEJBV0M7QUFXRCxrQkFBZSxTQUFTLENBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBCYXNlIGZyb20gJ3llb21hbi1nZW5lcmF0b3InO1xuaW1wb3J0IHsgQXNrIH0gZnJvbSAnLi9Bc2snO1xuaW1wb3J0IHsgZXhlY1N5bmMsIEV4ZWNTeW5jT3B0aW9uc1dpdGhTdHJpbmdFbmNvZGluZyB9IGZyb20gJ2NoaWxkX3Byb2Nlc3MnO1xuXG5leHBvcnQgaW50ZXJmYWNlIFByaW9yaXRpZXMge1xuICAgIC8vIGluaXRpYWxpemluZz86IEZ1bmN0aW9uIC8vKCkgPT4gYW55IC8vIC0gWW91ciBpbml0aWFsaXphdGlvbiBtZXRob2RzIChjaGVja2luZyBjdXJyZW50IHByb2plY3Qgc3RhdGUsIGdldHRpbmcgY29uZmlncywgZXRjKVxuICAgIC8vIHByb21wdGluZz86ICgpID0+IGFueSAvLyAtIFdoZXJlIHlvdSBwcm9tcHQgdXNlcnMgZm9yIG9wdGlvbnMgKHdoZXJlIHlvdeKAmWQgY2FsbCB0aGlzLnByb21wdCgpKVxuICAgIC8vIGNvbmZpZ3VyaW5nPzogKCkgPT4gYW55IC8vIC0gU2F2aW5nIGNvbmZpZ3VyYXRpb25zIGFuZCBjb25maWd1cmUgdGhlIHByb2plY3QgKGNyZWF0aW5nIC5lZGl0b3Jjb25maWcgZmlsZXMgYW5kIG90aGVyIG1ldGFkYXRhIGZpbGVzKVxuICAgIC8vIGRlZmF1bHQ/OiAoKSA9PiBhbnkgLy8gLSBJZiB0aGUgbWV0aG9kIG5hbWUgZG9lc27igJl0IG1hdGNoIGEgcHJpb3JpdHksIGl0IHdpbGwgYmUgcHVzaGVkIHRvIHRoaXMgZ3JvdXAuXG4gICAgLy8gd3JpdGluZz86ICgpID0+IGFueSAvLyAtIFdoZXJlIHlvdSB3cml0ZSB0aGUgZ2VuZXJhdG9yIHNwZWNpZmljIGZpbGVzIChyb3V0ZXMsIGNvbnRyb2xsZXJzLCBldGMpXG4gICAgLy8gY29uZmxpY3RzPzogKCkgPT4gYW55IC8vIC0gV2hlcmUgY29uZmxpY3RzIGFyZSBoYW5kbGVkICh1c2VkIGludGVybmFsbHkpXG4gICAgLy8gaW5zdGFsbD86ICgpID0+IGFueSAvLyAtIFdoZXJlIGluc3RhbGxhdGlvbnMgYXJlIHJ1biAobnBtLCBib3dlcilcbiAgICAvLyBlbmQ/OiAoKSA9PiBhbnkgLy8gLSBDYWxsZWQgbGFzdCwgY2xlYW51cCwgc2F5IGdvb2QgYnllLCBldGNcbn1cblxuZXhwb3J0IGFic3RyYWN0IGNsYXNzIEdlbmVyYXRvciBleHRlbmRzIEJhc2UgIHtcbiAgICBwcml2YXRlIF9hc2sgPSBuZXcgQXNrKHRoaXMpXG4gICAgcHVibGljIGdldCBhc2soKTogQXNrIHtyZXR1cm4gdGhpcy5fYXNrfVxuXG4gICAgcHJvdGVjdGVkIGV4ZWMoY21kOnN0cmluZywgb3B0aW9ucz86RXhlY1N5bmNPcHRpb25zV2l0aFN0cmluZ0VuY29kaW5nKXtcbiAgICAgICAgcmV0dXJuIGV4ZWNTeW5jKGNtZCwge1xuICAgICAgICAgICAgY3dkOiB0aGlzLmRlc3RpbmF0aW9uUGF0aCgpLFxuICAgICAgICAgICAgZW5jb2Rpbmc6ICd1dGY4JyxcbiAgICAgICAgICAgIC4uLm9wdGlvbnNcbiAgICAgICAgfSlcbiAgICB9XG59XG5cbmV4cG9ydCBuYW1lc3BhY2UgR2VuZXJhdG9yIHtcblxuICAgIGV4cG9ydCBpbnRlcmZhY2UgQmxhYmxhIHtcbiAgICAgICAgZm9vOiBzdHJpbmdcbiAgICB9XG5cbn1cblxuXG5leHBvcnQgZGVmYXVsdCBHZW5lcmF0b3IiXX0=