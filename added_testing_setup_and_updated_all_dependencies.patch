Index: packages/typestyled-components/.gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- packages/typestyled-components/.gitignore	(revision 02e596b5d17dac4aa33f6106b7f50c5eead1df0a)
+++ packages/typestyled-components/.gitignore	(revision 8d19e9ffec32b6b4f09d250a1ff68c90c992a634)
@@ -15,3 +15,4 @@
 
 .awcache
 .rpt2_cache
+.nyc_output
Index: packages/typestyled-components/examples/package.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- packages/typestyled-components/examples/package.json	(revision 02e596b5d17dac4aa33f6106b7f50c5eead1df0a)
+++ packages/typestyled-components/examples/package.json	(revision 8d19e9ffec32b6b4f09d250a1ff68c90c992a634)
@@ -1,20 +1,20 @@
 {
-  "name": "test-lib-example",
-  "homepage": "https://RobinRadic.github.io/test-lib",
-  "version": "0.0.0",
-  "license": "MIT",
-  "private": true,
-  "dependencies": {
-    "prop-types": "^15.6.2",
-    "react": "^16.4.1",
-    "react-dom": "^16.4.1",
-    "react-scripts": "^1.1.4",
-    "test-lib": "link:.."
-  },
-  "scripts": {
-    "start": "react-scripts start",
-    "build": "react-scripts build",
-    "test": "react-scripts test --env=jsdom",
-    "eject": "react-scripts eject"
-  }
+    "name": "typestyled-components-example",
+    "homepage": "https://RobinRadic.github.io/test-lib",
+    "version": "0.0.1",
+    "license": "MIT",
+    "private": true,
+    "dependencies": {
+        "prop-types": "^15.6.2",
+        "react": "^16.4.1",
+        "react-dom": "^16.4.1",
+        "react-scripts": "^1.1.4",
+        "typestyled-components": "link:.."
+    },
+    "scripts": {
+        "start": "react-scripts start",
+        "build": "react-scripts build",
+        "test": "react-scripts test --env=jsdom",
+        "eject": "react-scripts eject"
+    }
 }
Index: packages/typestyled-components/package.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- packages/typestyled-components/package.json	(revision 02e596b5d17dac4aa33f6106b7f50c5eead1df0a)
+++ packages/typestyled-components/package.json	(revision 8d19e9ffec32b6b4f09d250a1ff68c90c992a634)
@@ -13,6 +13,7 @@
         "dev:build": "npm-run-all env:dev clean build",
         "prod:build": "npm-run-all env:prod clean build",
         "dev:watch": "npm-run-all env:dev clean build",
+        "test": "nyc mocha --opts ./test/mocha.opts \"src/**/__tests__/**/*.test.+(ts|tsx|js)\" \"test/**/*.test.+(ts|tsx|js)\"",
         "build": "gulp build"
     },
     "engines": {
@@ -35,9 +36,35 @@
     "devDependencies": {
         "@types/hoist-non-react-statics": "^3.0.1",
         "@types/react": "^16.0.0",
+        "@types/react-dom": "^16.0.10",
         "@types/rollup": "^0.54.0",
-        "@types/gulp": "^3.0.0",
+        "jsdom": "^13.0.0",
+        "@types/gulp": "^4.0.5",
+        "@types/enzyme": "^3.1.10",
+        "@types/chai": "^4.1.3",
+        "@types/chai-enzyme": "^0.6.4",
+        "@types/jsdom": "^12.2.0",
+        "chai": "4.2.*",
+        "nyc": "13.1.*",
+        "chai-enzyme": "^1.0.0-beta.0",
+        "sinon": "^7.1.1",
+        "sinon-chai": "^3.1.0",
+        "mocha": "5.2.*",
+        "mocha-snapshots": "^4.1.0",
+        "mocha-typescript": "1.1.*",
+        "mochawesome-report-generator": "^3.1.2",
+        "@types/mocha": "^5.2.0",
+        "enzyme": "^3.3.0",
+        "react-dom": "^16.6.3",
+        "react": "^16.6.3",
+        "enzyme-adapter-react-16": "^1.1.1",
+        "enzyme-to-json": "^3.3.4",
         "@types/lodash": "^4.14.117",
+        "create-react-app": "^2.1.1",
+        "react-scripts-ts": "^3.1.0",
+        "@types/sinon": "^5.0.1",
+        "@types/node": "^10.12.10",
+        "@types/sinon-chai": "^3.2.1",
         "temp-dir": "^1.0.0",
         "lodash": "^4.17.11",
         "npm-run-all": "^4.1.3",
@@ -45,18 +72,18 @@
         "typescript": "^3.1.3",
         "gulp": "^3.9.1",
         "gulpclass": "^0.2.0",
-        "rollup": "^0.66.6",
+        "rollup": "^0.67.3",
         "rollup-plugin-commonjs": "^9.2.0",
         "rollup-plugin-livereload": "^0.6.0",
         "rollup-plugin-node-resolve": "^3.4.0",
         "rollup-plugin-replace": "^2.1.0",
         "rollup-plugin-serve": "^0.6.0",
         "rollup-plugin-typescript": "^1.0.0",
-        "rollup-plugin-typescript2": "^0.17.1",
+        "rollup-plugin-typescript2": "^0.18.0",
         "rollup-plugin-uglify": "^6.0.0",
-        "rollup-plugin-peer-deps-external":"^2.2.0",
+        "rollup-plugin-peer-deps-external": "^2.2.0",
         "rollup-plugin-babili": "^3.1.1",
         "rollup-plugin-url": "^2.0.1",
-        "rollup-plugin-postcss-modules": "1.0.8"
+        "rollup-plugin-postcss-modules": "1.0.10"
     }
 }
Index: packages/typestyled-components/src/tsconfig.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- packages/typestyled-components/src/tsconfig.json	(revision 02e596b5d17dac4aa33f6106b7f50c5eead1df0a)
+++ packages/typestyled-components/src/tsconfig.json	(revision 8d19e9ffec32b6b4f09d250a1ff68c90c992a634)
@@ -18,6 +18,7 @@
         "experimentalDecorators": true
     },
     "include": [
-        "*"
+        "*",
+        "../types"
     ]
 }
Index: packages/typestyled-components/test/_support/ts-node.js
===================================================================
--- packages/typestyled-components/test/_support/ts-node.js	(revision 8d19e9ffec32b6b4f09d250a1ff68c90c992a634)
+++ packages/typestyled-components/test/_support/ts-node.js	(revision 8d19e9ffec32b6b4f09d250a1ff68c90c992a634)
@@ -0,0 +1,4 @@
+const path = require('path')
+require('ts-node').register({
+    project        : path.resolve(__dirname, '..', '..', 'test', 'tsconfig.json')
+});
Index: packages/typestyled-components/test/example.test.ts
===================================================================
--- packages/typestyled-components/test/example.test.ts	(revision 8d19e9ffec32b6b4f09d250a1ff68c90c992a634)
+++ packages/typestyled-components/test/example.test.ts	(revision 8d19e9ffec32b6b4f09d250a1ff68c90c992a634)
@@ -0,0 +1,26 @@
+import { describe, it, suite, test } from 'mocha-typescript';
+import 'sinon'
+
+
+@suite('Example')
+class ExampleTest {
+    static before() {}
+
+    before() {}
+
+    @test 'should be able to test some simple shit'() {
+        let a = {
+            name    : 'foo',
+            projects: [ 'bar', 'laat', 'die' ],
+            num     : 123
+        }
+        // describe('a object with some properties', () => {
+            a[ 'name' ].should.eq('foo');
+            a[ 'projects' ].should.contain.ordered.members([ 'bar', 'laat', 'die' ])
+            a[ 'num' ].should.eq(123);
+            // it('should have asserted correctly', () => {
+
+            // });
+        // });
+    }
+}
Index: packages/typestyled-components/test/index.ts
===================================================================
--- packages/typestyled-components/test/index.ts	(revision 8d19e9ffec32b6b4f09d250a1ff68c90c992a634)
+++ packages/typestyled-components/test/index.ts	(revision 8d19e9ffec32b6b4f09d250a1ff68c90c992a634)
@@ -0,0 +1,0 @@
Index: packages/typestyled-components/test/mocha.opts
===================================================================
--- packages/typestyled-components/test/mocha.opts	(revision 8d19e9ffec32b6b4f09d250a1ff68c90c992a634)
+++ packages/typestyled-components/test/mocha.opts	(revision 8d19e9ffec32b6b4f09d250a1ff68c90c992a634)
@@ -0,0 +1,4 @@
+--ui mocha-typescript
+--require ts-node/register
+--require ./test/setup.ts
+--require source-map-support/register
Index: packages/typestyled-components/test/setup.ts
===================================================================
--- packages/typestyled-components/test/setup.ts	(revision 8d19e9ffec32b6b4f09d250a1ff68c90c992a634)
+++ packages/typestyled-components/test/setup.ts	(revision 8d19e9ffec32b6b4f09d250a1ff68c90c992a634)
@@ -0,0 +1,43 @@
+///<reference path="../types/index.d.ts"/>
+///<reference path="../types/globals.d.ts"/>
+
+import 'chai/register-assert';  // Using Assert style
+import 'chai/register-expect';  // Using Expect style
+import 'chai/register-should';  // Using Should style
+import chai from 'chai'
+import chaiSinon from 'sinon-chai'
+import chaiEnzyme from 'chai-enzyme'
+import {configure} from 'enzyme'
+import Adapter from 'enzyme-adapter-react-16'
+import { JSDOM } from 'jsdom'
+
+
+chai.use(chaiEnzyme())
+chai.use(chaiSinon);
+
+configure({ adapter: new Adapter() });
+
+export function setup(): void {
+
+}
+
+
+const jsdom = new JSDOM('<!doctype html><html><body></body></html>');
+const { window } = jsdom;
+
+function copyProps(src, target) {
+    const props = Object.getOwnPropertyNames(src)
+        .filter(prop => typeof target[prop] === 'undefined')
+        .reduce((result, prop) => ({
+            ...result,
+            [prop]: Object.getOwnPropertyDescriptor(src, prop),
+        }), {});
+    Object.defineProperties(target, props);
+}
+
+global.window = window;
+global.document = window.document;
+global.navigator = {
+    userAgent: 'node.js',
+};
+copyProps(window, global);
Index: packages/typestyled-components/test/tsconfig.json
===================================================================
--- packages/typestyled-components/test/tsconfig.json	(revision 8d19e9ffec32b6b4f09d250a1ff68c90c992a634)
+++ packages/typestyled-components/test/tsconfig.json	(revision 8d19e9ffec32b6b4f09d250a1ff68c90c992a634)
@@ -0,0 +1,33 @@
+{
+    "extends": "../../../tsconfig.json",
+    "compilerOptions": {
+        "module": "commonjs",
+        "target": "es5",
+        "lib": ["es5", "es6", "es7", "dom"],
+        "sourceMap": true,
+        "allowJs": true,
+        "jsx": "react",
+        "moduleResolution": "node",
+        "noImplicitReturns": false,
+        "noImplicitThis": false,
+        "noImplicitAny": false,
+        "strictNullChecks": false,
+        "skipLibCheck": true,
+        "suppressImplicitAnyIndexErrors": true,
+        "noUnusedLocals": false,
+        "allowSyntheticDefaultImports": true,
+        "esModuleInterop": true,
+        "emitDecoratorMetadata": true,
+        "experimentalDecorators": true,
+        "typeRoots": [
+            "../node_modules",
+            "../../../node_modules",
+            "../types"
+        ]
+    },
+    "include": [
+        "*",
+        "../types",
+        "../src"
+    ]
+}
Index: packages/typestyled-components/types/globals.d.ts
===================================================================
--- packages/typestyled-components/types/globals.d.ts	(revision 8d19e9ffec32b6b4f09d250a1ff68c90c992a634)
+++ packages/typestyled-components/types/globals.d.ts	(revision 8d19e9ffec32b6b4f09d250a1ff68c90c992a634)
@@ -0,0 +1,46 @@
+/// <reference types="react"/>
+
+
+/**
+ * Your file needs to be clean of any root level import or exports. That would turn the file into a module and disconnect it from the global type declaration namespace.
+
+ More : https://basarat.gitbooks.io/typescript/content/docs/project/modules.html
+ */
+
+declare const expect: Chai.ExpectStatic
+declare const should: Chai.Should
+declare const assert: Chai.AssertStatic
+
+
+declare function For<T>({ each, of, index }: { each: string; of: T[]; index?: string });
+
+declare function If({ condition }: { condition: boolean });
+
+declare function Choose();
+
+declare function When({ condition }: { condition: boolean });
+
+declare function Otherwise();
+
+declare function With(props: { [ id: string ]: any });
+
+declare namespace NodeJS {
+    import { DOMWindow } from 'jsdom';
+
+    interface Global {
+        window: DOMWindow
+        document: Document
+        navigator: { userAgent: string }
+    }
+}
+
+interface Object {
+    should: Chai.Assertion;
+}
+
+declare namespace Mocha {
+    interface InterfaceContributions {
+        'mocha-typescript': any
+    }
+}
+
Index: packages/typestyled-components/types/index.d.ts
===================================================================
--- packages/typestyled-components/types/index.d.ts	(revision 8d19e9ffec32b6b4f09d250a1ff68c90c992a634)
+++ packages/typestyled-components/types/index.d.ts	(revision 8d19e9ffec32b6b4f09d250a1ff68c90c992a634)
@@ -0,0 +1,6 @@
+import { SinonSpyStatic } from 'sinon';
+
+declare module 'sinon' {
+    export const spy:SinonSpyStatic
+}
+
